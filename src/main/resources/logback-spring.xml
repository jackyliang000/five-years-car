<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <!--<property name="CONSOLE_LOG_PATTERN"-->
    <!--value="%boldMagenta([%d{yyyy-MM-dd HH:mm:ss.SSS}]) %cyan([%X{requestId}]) %boldMagenta(%-5level) %blue(%logger{15}) %red([%thread])   %magenta(︻⊱═════>) %cyan(%msg%n)"/>-->

    <!--引入默认的一些设置 -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!--写入日志到控制台的appender,以java -jar xx.jar 启动会乱码 需要去掉 charset-->
    <!--<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
    <!--<encoder>-->
    <!--<pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
    <!--&lt;!&ndash;<charset>UTF-8</charset>&lt;!&ndash; 此处设置字符集 &ndash;&gt;&ndash;&gt;-->
    <!--</encoder>-->
    <!--</appender>-->


    <!-- 日志文件的存储地址 -->
    <property name="LOG_HOME" value="${LOG_PATH:-.}" />

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <!--<pattern>%boldMagenta([%d{yyyy-MM-dd HH:mm:ss.SSS}]) %cyan([%X{requestId}]) %boldMagenta(%-5level) %blue(%logger{15}) %red([%thread]) %magenta(︻⊱═══>) %yellow(%msg%n)</pattern>-->
            <!--<charset>UTF-8</charset>-->
        </encoder>
    </appender>


    <!--&lt;!&ndash;&lt;!&ndash;写入INFO日志到文件的appender &ndash;&gt;&ndash;&gt;-->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果只是想要 Info 级别的日志，只是过滤 info 还是会输出 Error 日志，因为 Error 的级别高， 所以我们使用下面的策略，可以避免输出
            Error 的日志 -->
        <!-- 此日志文档只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>                     <!--设置拦截的对象为INFO级别日志 -->
            <onMatch>ACCEPT</onMatch>               <!-- 当遇到了info级别时,启用改段配置. -->
            <onMismatch>DENY</onMismatch>           <!-- 没有遇到info级别日志时,屏蔽改段配置 -->
        </filter>

        <File>${LOG_HOME}/car-info.log</File>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/car-info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文档保留天数 -->
            <maxHistory>10</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 注意 logback 的括号需要转义 -->
        <encoder charset="UTF-8" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level \(%F:%L\) %logger{10} %method\(\) - %m%n </pattern>
            <charset>UTF-8</charset><!-- 此处设置字符集 -->
        </encoder>
    </appender>

    <!--写入DEBUG日志到文件的appender -->
    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 此日志文档只记录DEBUG级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <File>${LOG_HOME}/car-debug.log</File>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/car-debug.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文档保留天数 -->
            <maxHistory>10</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 注意 logback 的括号需要转义 -->
        <encoder charset="UTF-8" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level \(%F:%L\) %logger{10} %method\(\) - %m%n</pattern>
            <charset>UTF-8</charset><!-- 此处设置字符集 -->
        </encoder>
    </appender>


    <!--写入ERROR日志到文件的appender -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 此日志文档只记录ERROR级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <File>${LOG_HOME}/car-error.log</File>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/car-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文档保留天数 -->
            <maxHistory>10</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 注意 logback 的括号需要转义 -->
        <encoder charset="UTF-8" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level \(%F:%L\) %logger{10} %method\(\) - %m%n</pattern>
            <charset>UTF-8</charset><!-- 此处设置字符集 -->
        </encoder>
    </appender>

    <!--写入WARN日志到文件的appender -->
    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 此日志文档只记录WARN级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <File>${LOG_HOME}/car-warn.log</File>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_HOME}/car-warn.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文档保留天数 -->
            <maxHistory>10</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!-- 注意 logback 的括号需要转义 -->
        <encoder charset="UTF-8" class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level \(%F:%L\) %logger{10} %method\(\) - %m%n</pattern>
            <charset>UTF-8</charset><!-- 此处设置字符集 -->
        </encoder>
    </appender>

    <!--生产环境:打印控制台和输出到文件 -->
    <root level="info">
        <!--<appender-ref ref="CONSOLE"/>-->
        <appender-ref ref="STDOUT"/>
        <!--<appender-ref ref="ERROR_FILE"/>-->
    </root>

    <!--开发环境:打印控制台-->
    <!--<root level="info">-->
    <!--<appender-ref ref="STDOUT"/>-->
    <!--<appender-ref ref="INFO_FILE"/>-->
    <!--<appender-ref ref="DEBUG_FILE"/>-->
    <!--<appender-ref ref="ERROR_FILE"/>-->
    <!--<appender-ref ref="WARN_FILE"/>-->
    <!--</root>-->

    <!--测试环境:打印控制台 -->
    <!--<springProfile name="test">-->
    <!--<root level="info">-->
    <!--<appender-ref ref="CONSOLE"/>-->
    <!--<appender-ref ref="INFO_FILE"/>-->
    <!--<appender-ref ref="ERROR_FILE"/>-->
    <!--<appender-ref ref="WARN_FILE"/>-->
    <!--</root>-->
    <!--</springProfile>-->
</configuration>